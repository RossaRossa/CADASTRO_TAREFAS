class Produto {
    #preco;
    #quantidade;

    constructor(nome, preco, quantidade) {
        if (!nome || preco <= 0 || quantidade <= 0) {
            throw new Error("Dados inv√°lidos para o produto");
        }
        this.nome = nome;
        this.#preco = parseFloat(preco);
        this.#quantidade = parseInt(quantidade);
    }

    get preco() {
        return this.#preco;
    }

    get quantidade() {
        return this.#quantidade;
    }

    valorTotal() {
        return this.#preco * this.#quantidade;
    }
}

const produtos = [];
const backgroundImages = [
    'https://images.unsplash.com/photo-1519751138087-5bf79df62d5b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',
    'https://images.unsplash.com/photo-1497366754035-f200968a6e72?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',
    'https://images.unsplash.com/photo-1518481852452-9415b262eba4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'
];
let currentBgIndex = 0;
let isDarkTheme = true;

// Inicializa√ß√£o
document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('nome').focus();
    loadThemePreference();
    setupEventListeners();
});

function setupEventListeners() {
    // Formul√°rio de produto
    document.getElementById('produto-form').addEventListener('submit', function(e) {
        e.preventDefault();
        const nome = document.getElementById('nome').value.trim();
        const preco = document.getElementById('preco').value;
        const quantidade = document.getElementById('quantidade').value;

        try {
            const novoProduto = new Produto(nome, preco, quantidade);
            produtos.push(novoProduto);
            adicionarNaTabela(novoProduto);
            atualizarTotal();
            document.getElementById('nome').focus();
            e.target.reset();
        } catch (erro) {
            alert(erro.message);
        }
    });

    // Bot√£o limpar tabela
    document.getElementById("limpar-tabela").addEventListener("click", function() {
        if (produtos.length > 0 && confirm('Tem certeza que deseja limpar toda a tabela?')) {
            produtos.length = 0;
            atualizarTabela();
        }
    });

    // Bot√µes de ajuste de pre√ßo
    document.querySelectorAll('.adjust-btn').forEach(button => {
        button.addEventListener('click', function() {
            const precoInput = document.getElementById('preco');
            const amount = parseFloat(this.dataset.amount);
            let currentValue = parseFloat(precoInput.value) || 0;
            currentValue += amount;
            
            if (currentValue < 0) currentValue = 0;
            
            precoInput.value = currentValue.toFixed(2);
            precoInput.dispatchEvent(new Event('input'));
        });
    });

    // Valida√ß√£o de pre√ßo
    document.getElementById('preco').addEventListener('input', function(e) {
        if (parseFloat(this.value) < 0) {
            this.value = '0.00';
        }
    });

    // Bot√£o de mudar tema
    document.getElementById('change-theme').addEventListener('click', toggleTheme);

    // Bot√£o de mudar plano de fundo
    document.getElementById('change-bg').addEventListener('click', changeBackground);
}

function toggleTheme() {
    isDarkTheme = !isDarkTheme;
    document.body.classList.toggle('light-theme', !isDarkTheme);
    document.body.classList.toggle('dark-theme', isDarkTheme);
    saveThemePreference();
}

function changeBackground() {
    const body = document.body;
    
    if (body.classList.contains('background-image')) {
        body.classList.remove('background-image');
        body.style.backgroundImage = '';
    } else {
        currentBgIndex = (currentBgIndex + 1) % backgroundImages.length;
        body.classList.add('background-image');
        body.style.backgroundImage = `url('${backgroundImages[currentBgIndex]}')`;
    }
}

function saveThemePreference() {
    localStorage.setItem('themePreference', isDarkTheme ? 'dark' : 'light');
}

function loadThemePreference() {
    const savedTheme = localStorage.getItem('themePreference');
    if (savedTheme) {
        isDarkTheme = savedTheme === 'dark';
    }
    document.body.classList.add(isDarkTheme ? 'dark-theme' : 'light-theme');
}

function adicionarNaTabela(produto) {
    const tabela = document.querySelector("#tabela-produtos tbody");
    const row = document.createElement("tr");
    const index = produtos.length - 1;

    row.innerHTML = `
        <td>${produto.nome}</td>
        <td>R$ ${produto.preco.toFixed(2)}</td>
        <td>${produto.quantidade}</td>
        <td>R$ ${produto.valorTotal().toFixed(2)}</td>
        <td><button class="remove-btn" onclick="removerProduto(${index})">üóëÔ∏è Remover</button></td>
    `;
    tabela.appendChild(row);
}

function atualizarTotal() {
    const total = produtos.reduce((acc, p) => acc + p.valorTotal(), 0);
    document.getElementById('total').innerHTML = `
        <span>Total em Estoque:</span>
        <span class="total-value">R$ ${total.toFixed(2)}</span>
    `;
}

function removerProduto(index) {
    if (confirm('Tem certeza que deseja remover este produto?')) {
        produtos.splice(index, 1);
        atualizarTabela();
    }
}

function atualizarTabela() {
    const tabela = document.querySelector("#tabela-produtos tbody");
    tabela.innerHTML = "";
    
    produtos.forEach((produto, index) => {
        const row = document.createElement("tr");
        row.innerHTML = `
            <td>${produto.nome}</td>
            <td>R$ ${produto.preco.toFixed(2)}</td>
            <td>${produto.quantidade}</td>
            <td>R$ ${produto.valorTotal().toFixed(2)}</td>
            <td><button class="remove-btn" onclick="removerProduto(${index})">üóëÔ∏è Remover</button></td>
        `;
        tabela.appendChild(row);
    });

    atualizarTotal();
}









































console.log(":b")